{
  "remainingRequest": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/source-map-loader/index.js!/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/packages/core/dist/Core.js",
  "dependencies": [
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/packages/core/dist/Core.js",
      "mtime": 1562020318286
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/packages/core/dist/Core.js.map",
      "mtime": 1562020318286
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/packages/core/Core.tsx",
      "mtime": 1562017105564
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1560878154213
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/thread-loader/dist/cjs.js",
      "mtime": 1560878154956
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/docz-core/node_modules/babel-loader/lib/index.js",
      "mtime": 1560878154206
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/source-map-loader/index.js",
      "mtime": 1545397572535
    }
  ],
  "contextDependencies": [],
  "result": [
    {
      "type": "Buffer",
      "data": "base64:InVzZSBzdHJpY3QiOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWxbImRlZmF1bHQiXS5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKdmFyIF9fYXNzaWduID0gdGhpcyAmJiB0aGlzLl9fYXNzaWduIHx8IGZ1bmN0aW9uICgpIHsKICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHQpIHsKICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykgewogICAgICBzID0gYXJndW1lbnRzW2ldOwoKICAgICAgZm9yICh2YXIgcCBpbiBzKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSkgdFtwXSA9IHNbcF07CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdDsKICB9OwoKICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKCnZhciByZWFjdF8xID0gcmVxdWlyZSgicmVhY3QiKTsKCnZhciBzdHlsZXNfMSA9IHJlcXVpcmUoIkBtYXRlcmlhbC11aS9jb3JlL3N0eWxlcyIpOwoKdmFyIHN0eWxlc18yID0gcmVxdWlyZSgiQG1hdGVyaWFsLXVpL3N0eWxlcyIpOwoKdmFyIG1peGluID0gcmVxdWlyZSgnZGVlcG1lcmdlJyk7Cgp2YXIgdm9pZFRoZW1lID0gc3R5bGVzXzEuY3JlYXRlTXVpVGhlbWUoKTsKdmFyIGluaXRpYWxUaGVtZVN0YXRlID0gewogIHRoZW1lczogewogICAgInZvaWQiOiB2b2lkVGhlbWUKICB9LAogIGN1cnJlbnRUaGVtZTogJ3ZvaWQnCn07CmV4cG9ydHMuQ29udGV4dCA9IHJlYWN0XzFbImRlZmF1bHQiXS5jcmVhdGVDb250ZXh0KG1peGluKHt9LCBpbml0aWFsVGhlbWVTdGF0ZSkpOwoKdmFyIHRoZW1lUmVkdWNlciA9IGZ1bmN0aW9uIHRoZW1lUmVkdWNlcihzdGF0ZSwgYWN0aW9uKSB7CiAgdmFyIF9hOwoKICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7CiAgICBjYXNlICdBREQnOgogICAgICByZXR1cm4gX19hc3NpZ24oe30sIHN0YXRlLCB7CiAgICAgICAgdGhlbWVzOiBfX2Fzc2lnbih7fSwgc3RhdGUudGhlbWVzLCAoX2EgPSB7fSwgX2FbYWN0aW9uLnBheWxvYWQubmFtZV0gPSBhY3Rpb24ucGF5bG9hZC50aGVtZSwgX2EpKQogICAgICB9KTsKCiAgICBjYXNlICdDSEFOR0UnOgogICAgICByZXR1cm4gX19hc3NpZ24oe30sIHN0YXRlLCB7CiAgICAgICAgY3VycmVudFRoZW1lOiBhY3Rpb24ucGF5bG9hZC5uYW1lCiAgICAgIH0pOwoKICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiBzdGF0ZTsKICB9Cn07CgpmdW5jdGlvbiBQcm92aWRlcihfYSkgewogIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuOwoKICB2YXIgX2IgPSByZWFjdF8xLnVzZVJlZHVjZXIodGhlbWVSZWR1Y2VyLCByZWFjdF8xLnVzZUNvbnRleHQoZXhwb3J0cy5Db250ZXh0KSksCiAgICAgIHN0YXRlID0gX2JbMF0sCiAgICAgIGRpc3BhdGNoID0gX2JbMV07CgogIHZhciBfYyA9IHJlYWN0XzEudXNlU3RhdGUoc3RhdGUudGhlbWVzW3N0YXRlLmN1cnJlbnRUaGVtZV0pLAogICAgICB0aGVtZSA9IF9jWzBdLAogICAgICBzZXRUaGVtZSA9IF9jWzFdOwoKICByZWFjdF8xLnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7CiAgICBzZXRUaGVtZShzdGF0ZS50aGVtZXNbc3RhdGUuY3VycmVudFRoZW1lXSk7CiAgfSwgW3N0YXRlLmN1cnJlbnRUaGVtZV0pOwoKICB2YXIgcmVnaXN0ZXJUaGVtZSA9IGZ1bmN0aW9uIHJlZ2lzdGVyVGhlbWUobmFtZSwgdGhlbWUpIHsKICAgIGRpc3BhdGNoKHsKICAgICAgdHlwZTogJ0FERCcsCiAgICAgIHBheWxvYWQ6IHsKICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgIHRoZW1lOiB0aGVtZQogICAgICB9CiAgICB9KTsKICB9OwoKICB2YXIgY2hhbmdlVGhlbWUgPSBmdW5jdGlvbiBjaGFuZ2VUaGVtZShuYW1lKSB7CiAgICBkaXNwYXRjaCh7CiAgICAgIHR5cGU6ICdDSEFOR0UnLAogICAgICBwYXlsb2FkOiB7CiAgICAgICAgbmFtZTogbmFtZQogICAgICB9CiAgICB9KTsKICB9OwoKICByZXR1cm4gcmVhY3RfMVsiZGVmYXVsdCJdLmNyZWF0ZUVsZW1lbnQoZXhwb3J0cy5Db250ZXh0LlByb3ZpZGVyLCB7CiAgICB2YWx1ZTogewogICAgICBjdXJyZW50VGhlbWU6IHN0YXRlLmN1cnJlbnRUaGVtZSwKICAgICAgcmVnaXN0ZXJUaGVtZTogcmVnaXN0ZXJUaGVtZSwKICAgICAgY2hhbmdlVGhlbWU6IGNoYW5nZVRoZW1lCiAgICB9CiAgfSwgcmVhY3RfMVsiZGVmYXVsdCJdLmNyZWF0ZUVsZW1lbnQoc3R5bGVzXzIuVGhlbWVQcm92aWRlciwgewogICAgdGhlbWU6IHRoZW1lCiAgfSwgY2hpbGRyZW4pKTsKfQoKX19zaWduYXR1cmVfXyhQcm92aWRlciwgInVzZVJlZHVjZXJ7X2IocmVhY3RfMS51c2VDb250ZXh0KGV4cG9ydHMuQ29udGV4dCkpfVxudXNlQ29udGV4dHt9XG51c2VTdGF0ZXtfYyhzdGF0ZS50aGVtZXNbc3RhdGUuY3VycmVudFRoZW1lXSl9XG51c2VFZmZlY3R7fSIpOwoKZXhwb3J0cy5Qcm92aWRlciA9IFByb3ZpZGVyOwo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9fYXNzaWduLCAiX19hc3NpZ24iLCAiL2hvbWUvcGlzbW8vRG9jdW1lbnRvcy9QUk9KRVRPUy9tb25vcG9seS9wYWNrYWdlcy9ib2x0L3BhY2thZ2VzL2NvcmUvZGlzdC9Db3JlLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIodm9pZFRoZW1lLCAidm9pZFRoZW1lIiwgIi9ob21lL3Bpc21vL0RvY3VtZW50b3MvUFJPSkVUT1MvbW9ub3BvbHkvcGFja2FnZXMvYm9sdC9wYWNrYWdlcy9jb3JlL2Rpc3QvQ29yZS5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGluaXRpYWxUaGVtZVN0YXRlLCAiaW5pdGlhbFRoZW1lU3RhdGUiLCAiL2hvbWUvcGlzbW8vRG9jdW1lbnRvcy9QUk9KRVRPUy9tb25vcG9seS9wYWNrYWdlcy9ib2x0L3BhY2thZ2VzL2NvcmUvZGlzdC9Db3JlLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIodGhlbWVSZWR1Y2VyLCAidGhlbWVSZWR1Y2VyIiwgIi9ob21lL3Bpc21vL0RvY3VtZW50b3MvUFJPSkVUT1MvbW9ub3BvbHkvcGFja2FnZXMvYm9sdC9wYWNrYWdlcy9jb3JlL2Rpc3QvQ29yZS5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFByb3ZpZGVyLCAiUHJvdmlkZXIiLCAiL2hvbWUvcGlzbW8vRG9jdW1lbnRvcy9QUk9KRVRPUy9tb25vcG9seS9wYWNrYWdlcy9ib2x0L3BhY2thZ2VzL2NvcmUvZGlzdC9Db3JlLmpzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"
    },
    {
      "version": 3,
      "sources": [
        "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/packages/core/Core.tsx"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAMA,IAAA,QAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAEA,IAAM,KAAK,GAAG,OAAO,CAAC,WAAD,CAArB;;AAEA,IAAM,SAAS,GAAU,QAAA,CAAA,cAAA,EAAzB;AAMA,IAAM,iBAAiB,GAAgB;AACrC,EAAA,MAAM,EAAE;AAAE,YAAM;AAAR,GAD6B;AAErC,EAAA,YAAY,EAAE;AAFuB,CAAvC;AAKa,OAAA,CAAA,OAAA,GAA8B,OAAA,WAAA,CAAM,aAAN,CACzC,KAAK,CAAC,EAAD,EAAK,iBAAL,CADoC,CAA9B;;AAIb,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD,EAAqB,MAArB,EAA2B;;;AAC9C,UAAQ,MAAM,CAAC,IAAf;AACE,SAAK,KAAL;AACE,aAAA,QAAA,CAAA,EAAA,EACK,KADL,EACU;AACR,QAAA,MAAM,EAAA,QAAA,CAAA,EAAA,EAAO,KAAK,CAAC,MAAb,GAAmB,EAAA,GAAA,EAAA,EAAA,EAAA,CAAG,MAAM,CAAC,OAAP,CAAe,IAAlB,CAAA,GAAyB,MAAM,CAAC,OAAP,CAAe,KAAxC,EAA6C,EAAhE;AADE,OADV,CAAA;;AAIF,SAAK,QAAL;AACE,aAAA,QAAA,CAAA,EAAA,EACK,KADL,EACU;AACR,QAAA,YAAY,EAAE,MAAM,CAAC,OAAP,CAAe;AADrB,OADV,CAAA;;AAIF;AACE,aAAO,KAAP;AAZJ;AAcD,CAfD;;AAiBA,SAAgB,QAAhB,CAA0B,EAA1B,EAAsC;MAAV,QAAA,GAAA,EAAA,CAAA,Q;;AACpB,MAAA,EAAA,GAAA,OAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAA,CAAA,UAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AAAA,MAAC,KAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAQ,QAAA,GAAA,EAAA,CAAA,CAAA,CAAR;;AACA,MAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,YAAA,CAAA,CAAA;AAAA,MAAC,KAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAQ,QAAA,GAAA,EAAA,CAAA,CAAA,CAAR;;AAEN,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACR,IAAA,QAAQ,CAAC,KAAK,CAAC,MAAN,CAAa,KAAK,CAAC,YAAnB,CAAD,CAAR;AACD,GAFD,EAEG,CAAC,KAAK,CAAC,YAAP,CAFH;;AAIA,MAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,IAAD,EAAe,KAAf,EAA2B;AAC/C,IAAA,QAAQ,CAAC;AAAE,MAAA,IAAI,EAAE,KAAR;AAAe,MAAA,OAAO,EAAE;AAAE,QAAA,IAAI,EAAA,IAAN;AAAQ,QAAA,KAAK,EAAA;AAAb;AAAxB,KAAD,CAAR;AACD,GAFD;;AAIA,MAAM,WAAW,GAAG,SAAd,WAAc,CAAC,IAAD,EAAa;AAC/B,IAAA,QAAQ,CAAC;AAAE,MAAA,IAAI,EAAE,QAAR;AAAkB,MAAA,OAAO,EAAE;AAAE,QAAA,IAAI,EAAA;AAAN;AAA3B,KAAD,CAAR;AACD,GAFD;;AAIA,SACE,OAAA,WAAA,CAAA,aAAA,CAAC,OAAA,CAAA,OAAA,CAAQ,QAAT,EAAiB;AACf,IAAA,KAAK,EAAE;AAAE,MAAA,YAAY,EAAE,KAAK,CAAC,YAAtB;AAAoC,MAAA,aAAa,EAAA,aAAjD;AAAmD,MAAA,WAAW,EAAA;AAA9D;AADQ,GAAjB,EAGE,OAAA,WAAA,CAAA,aAAA,CAAC,QAAA,CAAA,aAAD,EAAc;AAAC,IAAA,KAAK,EAAE;AAAR,GAAd,EAA8B,QAA9B,CAHF,CADF;AAOD;;cAvBe,Q;;AAAhB,OAAA,CAAA,QAAA,GAAA,QAAA;;;;;;;;;;;0BAhCM,S;0BAMA,iB;0BASA,Y;0BAiBU,Q",
      "sourcesContent": [
        "import React, {\n  useContext,\n  useReducer,\n  useState,\n  useEffect\n} from 'react'\nimport { createMuiTheme, Theme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\n\nconst mixin = require('deepmerge')\n\nconst voidTheme: Theme = createMuiTheme()\ninterface IThemeState {\n  themes: { [key: string]: Theme }\n  currentTheme: string\n}\n\nconst initialThemeState: IThemeState = {\n  themes: { void: voidTheme },\n  currentTheme: 'void'\n}\n\nexport const Context: React.Context<any> = React.createContext(\n  mixin({}, initialThemeState)\n)\n\nconst themeReducer = (state: IThemeState, action): IThemeState => {\n  switch (action.type) {\n    case 'ADD':\n      return {\n        ...state,\n        themes: { ...state.themes, [action.payload.name]: action.payload.theme }\n      }\n    case 'CHANGE':\n      return {\n        ...state,\n        currentTheme: action.payload.name\n      }\n    default:\n      return state\n  }\n}\n\nexport function Provider ({ children }) {\n  const [state, dispatch] = useReducer(themeReducer, useContext(Context))\n  const [theme, setTheme] = useState(state.themes[state.currentTheme])\n\n  useEffect(() => {\n    setTheme(state.themes[state.currentTheme])\n  }, [state.currentTheme])\n\n  const registerTheme = (name: string, theme: Theme): void => {\n    dispatch({ type: 'ADD', payload: { name, theme } })\n  }\n\n  const changeTheme = (name: string): void => {\n    dispatch({ type: 'CHANGE', payload: { name } })\n  }\n\n  return (\n    <Context.Provider\n      value={{ currentTheme: state.currentTheme, registerTheme, changeTheme }}\n    >\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </Context.Provider>\n  )\n}\n"
      ]
    }
  ]
}
