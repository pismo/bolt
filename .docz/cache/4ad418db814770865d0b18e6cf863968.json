{
  "remainingRequest": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/@mdx-js/loader/index.js??ref--6-2!/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/source-map-loader/index.js!/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/packages/core/core.mdx",
  "dependencies": [
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/packages/core/core.mdx",
      "mtime": 1562020805969
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1560878154213
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/docz-core/node_modules/babel-loader/lib/index.js",
      "mtime": 1560878154206
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/@mdx-js/loader/index.js",
      "mtime": 1560878154608
    },
    {
      "path": "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/node_modules/source-map-loader/index.js",
      "mtime": 1545397572535
    }
  ],
  "contextDependencies": [],
  "result": [
    {
      "type": "Buffer",
      "data": "base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvaG9tZS9waXNtby9Eb2N1bWVudG9zL1BST0pFVE9TL21vbm9wb2x5L3BhY2thZ2VzL2JvbHQvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvaG9tZS9waXNtby9Eb2N1bWVudG9zL1BST0pFVE9TL21vbm9wb2x5L3BhY2thZ2VzL2JvbHQvcGFja2FnZXMvY29yZS9jb3JlLm1keCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgovKiBAanN4IG1keCAqLwppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0JzsKLyogQGpzeCBtZHggKi8KCmltcG9ydCB7IENvbXBvbmVudHNQcm92aWRlciB9IGZyb20gJ2RvY3onOwppbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJy4vQ29yZSc7CmltcG9ydCBCdXR0b24gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvQnV0dG9uJzsKCnZhciBtYWtlU2hvcnRjb2RlID0gZnVuY3Rpb24gbWFrZVNob3J0Y29kZShuYW1lKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpIHsKICAgIGNvbnNvbGUud2FybigiQ29tcG9uZW50ICIgKyBuYW1lICsgIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7CiAgICByZXR1cm4gbWR4KCJkaXYiLCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywgewogICAgICBfX3NvdXJjZTogewogICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgbGluZU51bWJlcjogMTEKICAgICAgfSwKICAgICAgX19zZWxmOiB0aGlzCiAgICB9KSk7CiAgfTsKfTsKCnZhciBsYXlvdXRQcm9wcyA9IHt9Owp2YXIgTURYTGF5b3V0ID0gIndyYXBwZXIiOwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpIHsKICB2YXIgY29tcG9uZW50cyA9IF9yZWYuY29tcG9uZW50cywKICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgWyJjb21wb25lbnRzIl0pOwoKICByZXR1cm4gbWR4KE1EWExheW91dCwgT2JqZWN0LmFzc2lnbih7fSwgbGF5b3V0UHJvcHMsIHByb3BzLCB7CiAgICBjb21wb25lbnRzOiBjb21wb25lbnRzLAogICAgbWR4VHlwZTogIk1EWExheW91dCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCBtZHgoImgxIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAiY29yZSIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiQ29yZSIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJIZWxsbywgSSdtIGEgbWR4IGZpbGUiKSwgbWR4KENvbXBvbmVudHNQcm92aWRlciwgewogICAgbWR4VHlwZTogIkNvbXBvbmVudHNQcm92aWRlciIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyOAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keChQcm92aWRlciwgewogICAgbWR4VHlwZTogIlByb3ZpZGVyIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KEJ1dHRvbiwgewogICAgbWR4VHlwZTogIkJ1dHRvbiIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJ0ZXN0ZSIpKSkpOwp9CgppZiAodHlwZW9mIE1EWENvbnRlbnQgIT09ICd1bmRlZmluZWQnICYmIE1EWENvbnRlbnQgJiYgTURYQ29udGVudCA9PT0gT2JqZWN0KE1EWENvbnRlbnQpICYmIE9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIk1EWENvbnRlbnQiLAogICAgICBmaWxlbmFtZTogInBhY2thZ2VzL2NvcmUvY29yZS5tZHgiCiAgICB9CiAgfSk7Cn0KCk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOwo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKG1ha2VTaG9ydGNvZGUsICJtYWtlU2hvcnRjb2RlIiwgIi9ob21lL3Bpc21vL0RvY3VtZW50b3MvUFJPSkVUT1MvbW9ub3BvbHkvcGFja2FnZXMvYm9sdC9wYWNrYWdlcy9jb3JlL2NvcmUubWR4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIobGF5b3V0UHJvcHMsICJsYXlvdXRQcm9wcyIsICIvaG9tZS9waXNtby9Eb2N1bWVudG9zL1BST0pFVE9TL21vbm9wb2x5L3BhY2thZ2VzL2JvbHQvcGFja2FnZXMvY29yZS9jb3JlLm1keCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKE1EWExheW91dCwgIk1EWExheW91dCIsICIvaG9tZS9waXNtby9Eb2N1bWVudG9zL1BST0pFVE9TL21vbm9wb2x5L3BhY2thZ2VzL2JvbHQvcGFja2FnZXMvY29yZS9jb3JlLm1keCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKE1EWENvbnRlbnQsICJNRFhDb250ZW50IiwgIi9ob21lL3Bpc21vL0RvY3VtZW50b3MvUFJPSkVUT1MvbW9ub3BvbHkvcGFja2FnZXMvYm9sdC9wYWNrYWdlcy9jb3JlL2NvcmUubWR4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"
    },
    {
      "version": 3,
      "sources": [
        "/home/pismo/Documentos/PROJETOS/monopoly/packages/bolt/packages/core/core.mdx"
      ],
      "names": [
        "React",
        "mdx",
        "ComponentsProvider",
        "Provider",
        "Button",
        "makeShortcode",
        "name",
        "MDXDefaultShortcode",
        "props",
        "console",
        "warn",
        "layoutProps",
        "MDXLayout",
        "MDXContent",
        "components",
        "isMDXComponent"
      ],
      "mappings": ";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AACF,SAAQC,kBAAR,QAAiC,MAAjC;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALK,EAML,IAAC,kBAAD;AAAoB,IAAA,OAAO,EAAC,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,IAAC,QAAD;AAAU,IAAA,OAAO,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,IAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADA,CANK,CAAP;AAYD;;;;;;;;;;;;;AAEDD,UAAU,CAACE,cAAX,GAA4B,IAA5B;;;;;;;;;;0BA3BMV,a;0BAKAM,W;0BAGAC,S;0BACkBC,U",
      "sourcesContent": [
        "/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport {ComponentsProvider} from 'docz'\nimport {Provider} from './Core'\nimport Button from '@material-ui/core/Button'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"core\"\n    }}>{`Core`}</h1>\n    <p>{`Hello, I'm a mdx file`}</p>\n    <ComponentsProvider mdxType=\"ComponentsProvider\">\n    <Provider mdxType=\"Provider\">\n        <Button mdxType=\"Button\">teste</Button>\n    </Provider>\n    </ComponentsProvider>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "
      ]
    }
  ]
}
